@model TaskChecker.Web.Models.ExerciseViewModel

@{
    ViewBag.Title = "Exercise";
    Layout = "../Shared/_Layout.cshtml";
    var exercise = Model.Exercise;
}

<div>
    <h4>Exercise</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Exercise.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Exercise.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Exercise.Value)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Exercise.Value)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Back to Lab Work", "LabWork", "Home", new { Id = Model.Exercise.LabWork.Id }, null)
</p>

<h3>Submit Answer:</h3>
@using (Html.BeginForm("ExerciseSubmission", "Home", FormMethod.Post))
{
    <input type="hidden" id="ExerciseId" name="ExerciseId" value="@Model.Exercise.Id" />
    <div class="form-group">
        @Html.LabelFor(x => x.Exercise.IsStatic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Exercise.IsStatic, null, "IsStatic")
                @Html.ValidationMessageFor(model => exercise.IsStatic, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => exercise.TypeName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => exercise.TypeName, null, "TypeName", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => exercise.TypeName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => exercise.MethodName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => exercise.MethodName, null, "MethodName", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => exercise.MethodName, "", new { @class = "text-danger" })
        </div>
    </div>
    <p>
        <label>Source Code:</label><br />
        <textarea name="content"></textarea>
    </p>
    <p>
        <input type="submit" value="Send" />
    </p>
}

<h4>Your submissions</h4>

<table class="table">
    <tr>
        <th>
            @Html.DisplayName("Id")
        </th>
        <th>
            @Html.DisplayName("Created")
        </th>
        <th>
            @Html.DisplayName("IsTested")
        </th>
        <th>
            @Html.DisplayName("IsFinal")
        </th>
        <th>
            @Html.DisplayName("Score")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Submissions)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsTested)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsFinal)
            </td>
            <td>
                @($"{item.TestResults.Count(x => x.IsPassed)}/{item.TestResults.Count}")
            </td>
            <td>
                @Html.ActionLink("Details", "Submission", "Home", new { id = item.Id }, null)
            </td>
        </tr>
    }

</table>